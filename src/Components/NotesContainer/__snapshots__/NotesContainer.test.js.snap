// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NotesContainer Component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotesContainer
    addToNotes={[MockFunction]}
    notes={
      Array [
        Object {
          "body": "I really need to invest in some bitcoins while the price is down. That way, once it goes back up, I'll be RICH!",
          "title": "Buy some bitcoins!",
        },
        Object {
          "body": "The price of ethereum is going to drop next Tuesday! Make arrangements",
          "title": "Ethereum",
        },
        Object {
          "body": "Never ever ever ever ever again will I invest in XRP. I almost lost everything!",
          "title": "Never again!",
        },
      ]
    }
    removeFromNotes={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Note
          addToNotes={[MockFunction]}
          note={
            Object {
              "body": "I really need to invest in some bitcoins while the price is down. That way, once it goes back up, I'll be RICH!",
              "title": "Buy some bitcoins!",
            }
          }
          removeFromNotes={[MockFunction]}
        />,
        <Note
          addToNotes={[MockFunction]}
          note={
            Object {
              "body": "The price of ethereum is going to drop next Tuesday! Make arrangements",
              "title": "Ethereum",
            }
          }
          removeFromNotes={[MockFunction]}
        />,
        <Note
          addToNotes={[MockFunction]}
          note={
            Object {
              "body": "Never ever ever ever ever again will I invest in XRP. I almost lost everything!",
              "title": "Never again!",
            }
          }
          removeFromNotes={[MockFunction]}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "addToNotes": [MockFunction],
          "note": Object {
            "body": "I really need to invest in some bitcoins while the price is down. That way, once it goes back up, I'll be RICH!",
            "title": "Buy some bitcoins!",
          },
          "removeFromNotes": [MockFunction],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "addToNotes": [MockFunction],
          "note": Object {
            "body": "The price of ethereum is going to drop next Tuesday! Make arrangements",
            "title": "Ethereum",
          },
          "removeFromNotes": [MockFunction],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "class",
        "props": Object {
          "addToNotes": [MockFunction],
          "note": Object {
            "body": "Never ever ever ever ever again will I invest in XRP. I almost lost everything!",
            "title": "Never again!",
          },
          "removeFromNotes": [MockFunction],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Note
            addToNotes={[MockFunction]}
            note={
              Object {
                "body": "I really need to invest in some bitcoins while the price is down. That way, once it goes back up, I'll be RICH!",
                "title": "Buy some bitcoins!",
              }
            }
            removeFromNotes={[MockFunction]}
          />,
          <Note
            addToNotes={[MockFunction]}
            note={
              Object {
                "body": "The price of ethereum is going to drop next Tuesday! Make arrangements",
                "title": "Ethereum",
              }
            }
            removeFromNotes={[MockFunction]}
          />,
          <Note
            addToNotes={[MockFunction]}
            note={
              Object {
                "body": "Never ever ever ever ever again will I invest in XRP. I almost lost everything!",
                "title": "Never again!",
              }
            }
            removeFromNotes={[MockFunction]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "addToNotes": [MockFunction],
            "note": Object {
              "body": "I really need to invest in some bitcoins while the price is down. That way, once it goes back up, I'll be RICH!",
              "title": "Buy some bitcoins!",
            },
            "removeFromNotes": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "addToNotes": [MockFunction],
            "note": Object {
              "body": "The price of ethereum is going to drop next Tuesday! Make arrangements",
              "title": "Ethereum",
            },
            "removeFromNotes": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "addToNotes": [MockFunction],
            "note": Object {
              "body": "Never ever ever ever ever again will I invest in XRP. I almost lost everything!",
              "title": "Never again!",
            },
            "removeFromNotes": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
